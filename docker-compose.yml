services:
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
    restart: unless-stopped
    network_mode: host  # Host mode for proper WebRTC/RTSP UDP handling
    volumes:
      - ./mediamtx.yml:/mediamtx.yml:ro

  hydro-app:
    build: .
    container_name: hydro-production
    network_mode: host  # Use host network to access mosquitto on localhost
    volumes:
      - ./hydro.db:/app/hydro.db           # Persist database
      - hydro-data:/app/data               # Additional data persistence (includes camera frames)
      - ./camera_frames:/app/data/camera_frames  # Optional: direct access to camera frames from host
    environment:
      # Application
      - NODE_ENV=production
      
      # Ports
      - PORT=${FRONTEND_PORT:-3001}
      - API_PORT=${API_PORT:-8001}
      
      # MQTT Configuration
      - MQTT_BROKER=${MQTT_BROKER:-127.0.0.1}
      - MQTT_PORT=${MQTT_PORT:-1883}
      
      # MediaMTX Configuration
      - MEDIAMTX_HOST=${MEDIAMTX_HOST:-localhost}
      - MEDIAMTX_API_PORT=${MEDIAMTX_API_PORT:-9997}
      - MEDIAMTX_WEBRTC_PORT=${MEDIAMTX_WEBRTC_PORT:-8889}
    restart: unless-stopped
    depends_on:
      - mediamtx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-3001}", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  hydro-data:
    driver: local
